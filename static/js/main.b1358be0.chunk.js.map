{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/Rank/Rank.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","serviceWorker.js","index.js","components/Logo/brain.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","src","brain","alt","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Rank","name","entries","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","href","React","Component","Register","onNameChange","onSubmitRegister","particleOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","err","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.b1358be0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n\tif(isSignedIn) {\r\n\t\treturn(\r\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t<p onClick={() => onRouteChange('signOut')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n\t\t\t</nav>\t\r\n\t\t);\r\n\t} else {\r\n\t\treturn(\r\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t<p onClick={() => onRouteChange('signIn')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n\t\t\t\t<p onClick={() => onRouteChange('Register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport brain from './brain.png';\r\n\r\nconst Logo = () => {\r\n\treturn (\r\n\t\t<div className='ma5 mt0'>\r\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n\t\t\t <div className=\"Tilt-inner pa3\"> <img style={{paddingTop: '-2px'}} src={brain} alt='logo'/>  </div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p className='f3'>\r\n\t\t\t\t{'This Magic Brain will detect faces in you pictures. Give it a try!'}\r\n\t\t\t</p>\r\n\t\t\t<div className='center'>\r\n\t\t\t\t<div className='form center pa4 br3 shadow-5'>\r\n\t\t\t\t\t<input className='f4 pa2 w-70 center' type='text' onChange={onInputChange} />\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n\t\t\t\t\t\tonClick={onButtonSubmit}>Detect</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n\treturn (\r\n\t\t<div className='center ma'>\r\n\t\t<div className='absolute mt2'>\r\n\t\t\t<img id='inputImage' alt={''} src={imageUrl} width='500px' height='auto' />\r\n\t\t\t<div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst Rank = ({ name, entries }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='white f3'>\r\n\t\t\t\t{`${name}, your current entry count is...`}\r\n\t\t\t</div>\r\n\t\t\t<div className='white f1'>\r\n\t\t\t\t{entries}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Rank;","import React from 'react';\r\n\r\nclass SignIn extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsignInEmail: '',\r\n\t\t\tsignInPassword: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({signInEmail: event.target.value})\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({signInPassword: event.target.value})\r\n\t}\r\n\r\n\tonSubmitSignIn = () => {\r\n\t\tfetch('https://still-cove-70158.herokuapp.com/signin', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: this.state.signInEmail,\r\n\t\t\t\tpassword: this.state.signInPassword\r\n\t\t\t})\r\n\t\t}).then(response => response.json())\r\n\t\t.then(user => {\r\n\t\t\tif(user.id) {\r\n\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { onRouteChange } = this.props;\r\n\t\treturn (\r\n\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t  <div className=\"measure\">\r\n\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t        <input \r\n\t\t\t        \tonChange={this.onEmailChange} \r\n\t\t\t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mv3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t        <input \r\n\t\t\t        \tonChange={this.onPasswordChange}\r\n\t\t\t        \tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n\t\t\t      </div>\r\n\t\t\t    </fieldset>\r\n\t\t\t    <div className=\"\">\r\n\t\t\t      <input \r\n\t\t\t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t      type=\"submit\" \r\n\t\t\t      value=\"Sign in\"\r\n\t\t\t      onClick={this.onSubmitSignIn} \r\n\t\t      />\r\n\t\t\t    </div>\r\n\t\t\t    <div className=\"lh-copy mt3\">\r\n\t\t\t      <p onClick={() => onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</main>\r\n\t\t</article>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\n\r\nclass Register extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tname: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonNameChange = (event) => {\r\n\t\tthis.setState({name: event.target.value})\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({email: event.target.value})\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({password: event.target.value})\r\n\t}\r\n\r\n\tonSubmitRegister = () => {\r\n\t\tfetch('https://still-cove-70158.herokuapp.com/register', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: this.state.email,\r\n        password: this.state.password,\r\n        name: this.state.name\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(user => {\r\n\t\t\t\tif(user.id) {\r\n\t\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t\t  <div className=\"measure\">\r\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        onChange={this.onNameChange}\r\n\t\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        type=\"text\" \r\n\t\t\t\t        name=\"name\"  \r\n\t\t\t\t        id=\"name\" />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        onChange={this.onEmailChange}\r\n\t\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        type=\"email\" \r\n\t\t\t\t        name=\"email-address\"  \r\n\t\t\t\t        id=\"email-address\" />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        onChange={this.onPasswordChange}\r\n\t\t\t\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        type=\"password\" \r\n\t\t\t\t        name=\"password\"  \r\n\t\t\t\t        id=\"password\" />\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </fieldset>\r\n\t\t\t\t    <div className=\"\">\r\n\t\t\t\t      \t<input \r\n\t\t\t\t      \tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t\t      \ttype=\"submit\" \r\n\t\t\t\t      \tvalue=\"Register\"\r\n\t\t\t\t      \tonClick={this.onSubmitRegister} \r\n\t\t      \t\t/>\r\n\t\t      \t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</main>\r\n\t\t\t</article>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport './App.css';\n\nconst particleOptions = {\n\tparticles: {\n\t\tnumber: {\n\t\t\tvalue: 80,\n\t\t\tdensity: {\n\t\t\t\tenable: true,\n\t\t\t\tvalue_area: 800\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signIn',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n  \tsuper();\n  \tthis.state = {\n  \t\tinput: '',\n  \t\timageUrl: '',\n  \t\tbox: {},\n      route: 'signIn',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n  \t}\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n  \tconst clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n  \tconst image = document.getElementById('inputImage');\n  \tconst width = Number(image.width);\n  \tconst height = Number(image.height);\n  \treturn {\n  \t\tleftCol: clarifaiFace.left_col * width,\n  \t\ttopRow: clarifaiFace.top_row * height,\n  \t\trightCol: width - (clarifaiFace.right_col * width),\n  \t\tbottomRow: height - (clarifaiFace.bottom_row * height)\n  \t}\n  }\n\n  displayFaceBox = (box) => {\n  \tthis.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n  \tthis.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n  \tthis.setState({imageUrl: this.state.input});\n  \tfetch('https://still-cove-70158.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n    .then(response => response.json())\n  \t.then(response => {\n      if (response) {\n        fetch('https://still-cove-70158.herokuapp.com/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries: count}))\n      })\n      .catch(console.log);\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n\t  })\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signOut') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n\t  \treturn (\n\t    <div className=\"App\">\n\t    \t <Particles className='particles'\n\t          params={particleOptions} \n\t  \t\t\t/>\n\t      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home' ?\n         <div> \n            <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries} />\n            <ImageLinkForm \n              onInputChange={this.onInputChange} \n              onButtonSubmit={this.onButtonSubmit}/>\n            <FaceRecognition box={box} imageUrl={imageUrl}/>\n         </div>\n        : (\n            route === 'signIn' ?\n          <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div>\n\t  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons'; \n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.8c8d50ee.png\";"],"sourceRoot":""}